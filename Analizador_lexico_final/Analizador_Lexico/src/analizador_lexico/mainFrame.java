
package analizador_lexico; // Definición del paquete al que pertenece esta clase

import java.awt.BorderLayout; // Importación de clases necesarias para la interfaz gráfica
import java.awt.CardLayout;
import java.io.File; // Importación de clases necesarias para trabajar con archivos
import java.util.ArrayList; // Importación de clases necesarias para usar ArrayList
import javax.swing.JOptionPane; // Importación de clases necesarias para mostrar mensajes de diálogo

/**
 *
 * @author Uriel(Dude)
 */

// Declaración de la clase mainFrame que extiende de javax.swing.JFrame
public class mainFrame extends javax.swing.JFrame {

    // Declaración de variables privadas de la clase
    private ArrayList<AFN> AFNs = new ArrayList<>(); // ArrayList para almacenar Autómatas Finitos No Deterministas (AFN)
    private ArrayList<AFD> AFDs = new ArrayList<>(); // ArrayList para almacenar Autómatas Finitos Deterministas (AFD)
    private CardLayout manager; // Layout para manejar diferentes paneles (tipo CardLayout)
    private javax.swing.JTable unionLXTabla; // Tabla para mostrar información sobre la unión léxica
    private javax.swing.JTable AFN_DTabla; // Tabla para mostrar información sobre los AFN deterministas
    private javax.swing.JTable anaLXTabla; // Tabla para mostrar información sobre el análisis léxico
    private ArrayList<String[]> data = new ArrayList<>(); // ArrayList para almacenar datos
    private AnalizadorLexico actAnaLX = null; // Objeto AnalizadorLexico para realizar el análisis léxico
    
    // Constructor de la clase
    public mainFrame() {
        initComponents(); // Método para inicializar los componentes de la interfaz gráfica
        this.manager = (CardLayout)(this.masterPanel.getLayout()); // Obtiene el layout del panel principal
        this.manager.show(this.masterPanel, "main"); // Muestra el panel "main" usando el CardLayout
    }
    
    // Método privado para volver al panel principal
    private void volver(){
        this.manager.show(this.masterPanel, "main"); // Muestra el panel "main" usando el CardLayout
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        masterPanel = new javax.swing.JPanel();
        mainPanel = new javax.swing.JPanel();
        basicoPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        bCarSup = new javax.swing.JTextField();
        bCarInf = new javax.swing.JTextField();
        bCrearAFN = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        bIdAFN = new javax.swing.JTextField();
        bVolver = new javax.swing.JToggleButton();
        unirPanel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        uAFN1 = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        uAFN2 = new javax.swing.JComboBox<>();
        uUnirAFN = new javax.swing.JToggleButton();
        uVolver = new javax.swing.JToggleButton();
        concPanel = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        cAFN1 = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        cAFN2 = new javax.swing.JComboBox<>();
        cConcAFN = new javax.swing.JToggleButton();
        cVolver = new javax.swing.JToggleButton();
        opPosPanel = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        oPosSelec = new javax.swing.JComboBox<>();
        oPosAFN = new javax.swing.JToggleButton();
        oPosVolver = new javax.swing.JToggleButton();
        opKlnPanel = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        oKlnSelec = new javax.swing.JComboBox<>();
        oKlnAFN = new javax.swing.JToggleButton();
        oKlnVolver = new javax.swing.JToggleButton();
        opOpcPanel = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        oOpcSelec = new javax.swing.JComboBox<>();
        oOpcAFN = new javax.swing.JToggleButton();
        oOpcVolver = new javax.swing.JToggleButton();
        unionLXPanel = new javax.swing.JPanel();
        unionLXVolver = new javax.swing.JToggleButton();
        jLabel12 = new javax.swing.JLabel();
        unionLXMain = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        unionLXId = new javax.swing.JTextField();
        unionLXUnir = new javax.swing.JButton();
        AFN_DPanel = new javax.swing.JPanel();
        AFN_DVolver = new javax.swing.JToggleButton();
        jLabel15 = new javax.swing.JLabel();
        AFN_DId = new javax.swing.JTextField();
        AFN_DSave = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        AFN_DcBox = new javax.swing.JComboBox<>();
        AFN_DMain = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        anaLXPanel = new javax.swing.JPanel();
        anaLXVolver = new javax.swing.JToggleButton();
        jLabel17 = new javax.swing.JLabel();
        anaLXcBox = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        anaLXtext = new javax.swing.JTextPane();
        anaLXMain = new javax.swing.JPanel();
        anaLXanaliz = new javax.swing.JToggleButton();
        loadAFDPanel = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        loadAFDId = new javax.swing.JTextField();
        loadAFDfile = new javax.swing.JButton();
        AFDSave = new javax.swing.JButton();
        masterMenuBar = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        masterPanel.setLayout(new java.awt.CardLayout());

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 871, Short.MAX_VALUE)
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 456, Short.MAX_VALUE)
        );

        masterPanel.add(mainPanel, "main");

        jLabel1.setText("Caracter Superior");

        jLabel2.setText("Caracter Inferior");

        bCrearAFN.setText("Crear AFN");
        bCrearAFN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCrearAFNActionPerformed(evt);
            }
        });

        jLabel4.setText("ID del AFN");

        bVolver.setText("Volver");
        bVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bVolverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout basicoPanelLayout = new javax.swing.GroupLayout(basicoPanel);
        basicoPanel.setLayout(basicoPanelLayout);
        basicoPanelLayout.setHorizontalGroup(
            basicoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(basicoPanelLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(basicoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(basicoPanelLayout.createSequentialGroup()
                        .addComponent(bVolver)
                        .addGap(18, 18, 18)
                        .addComponent(bCrearAFN))
                    .addGroup(basicoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(basicoPanelLayout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addGap(18, 18, 18)
                            .addComponent(bCarInf, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(basicoPanelLayout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(bCarSup, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(basicoPanelLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(25, 25, 25)
                        .addComponent(bIdAFN, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(632, Short.MAX_VALUE))
        );
        basicoPanelLayout.setVerticalGroup(
            basicoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(basicoPanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(basicoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(bCarInf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(basicoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(bCarSup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(basicoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(bIdAFN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 259, Short.MAX_VALUE)
                .addGroup(basicoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bVolver)
                    .addComponent(bCrearAFN))
                .addGap(26, 26, 26))
        );

        masterPanel.add(basicoPanel, "basico");

        jLabel5.setText("Unir");

        jLabel6.setText("con");

        uUnirAFN.setText("Unir AFNs");
        uUnirAFN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uUnirAFNActionPerformed(evt);
            }
        });

        uVolver.setText("Volver");
        uVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uVolverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout unirPanelLayout = new javax.swing.GroupLayout(unirPanel);
        unirPanel.setLayout(unirPanelLayout);
        unirPanelLayout.setHorizontalGroup(
            unirPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(unirPanelLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(unirPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(unirPanelLayout.createSequentialGroup()
                        .addComponent(uVolver)
                        .addGap(18, 18, 18)
                        .addComponent(uUnirAFN))
                    .addGroup(unirPanelLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(uAFN1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(104, 104, 104)
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(uAFN2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(337, Short.MAX_VALUE))
        );
        unirPanelLayout.setVerticalGroup(
            unirPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(unirPanelLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(unirPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(uAFN1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(uAFN2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 343, Short.MAX_VALUE)
                .addGroup(unirPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(uVolver)
                    .addComponent(uUnirAFN))
                .addGap(26, 26, 26))
        );

        masterPanel.add(unirPanel, "unir");

        jLabel7.setText("Concatenar");

        jLabel8.setText("con");

        cConcAFN.setText("Concatenar AFNs");
        cConcAFN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cConcAFNActionPerformed(evt);
            }
        });

        cVolver.setText("Volver");
        cVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cVolverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout concPanelLayout = new javax.swing.GroupLayout(concPanel);
        concPanel.setLayout(concPanelLayout);
        concPanelLayout.setHorizontalGroup(
            concPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(concPanelLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(concPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(concPanelLayout.createSequentialGroup()
                        .addComponent(cVolver)
                        .addGap(18, 18, 18)
                        .addComponent(cConcAFN))
                    .addGroup(concPanelLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(cAFN1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(61, 61, 61)
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(cAFN2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(343, Short.MAX_VALUE))
        );
        concPanelLayout.setVerticalGroup(
            concPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(concPanelLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(concPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(cAFN1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(cAFN2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 343, Short.MAX_VALUE)
                .addGroup(concPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cVolver)
                    .addComponent(cConcAFN))
                .addGap(26, 26, 26))
        );

        masterPanel.add(concPanel, "conc");

        jLabel9.setText("Aplicar cerradura+ a");

        oPosAFN.setText("Realizar cerradura+");
        oPosAFN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oPosAFNActionPerformed(evt);
            }
        });

        oPosVolver.setText("Volver");
        oPosVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oPosVolverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout opPosPanelLayout = new javax.swing.GroupLayout(opPosPanel);
        opPosPanel.setLayout(opPosPanelLayout);
        opPosPanelLayout.setHorizontalGroup(
            opPosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(opPosPanelLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(opPosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(opPosPanelLayout.createSequentialGroup()
                        .addComponent(oPosVolver)
                        .addGap(18, 18, 18)
                        .addComponent(oPosAFN))
                    .addGroup(opPosPanelLayout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(oPosSelec, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(517, Short.MAX_VALUE))
        );
        opPosPanelLayout.setVerticalGroup(
            opPosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(opPosPanelLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(opPosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(oPosSelec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 343, Short.MAX_VALUE)
                .addGroup(opPosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(oPosVolver)
                    .addComponent(oPosAFN))
                .addGap(26, 26, 26))
        );

        masterPanel.add(opPosPanel, "oppos");

        jLabel10.setText("Aplicar cerradura* a");

        oKlnAFN.setText("Realizar cerradura*");
        oKlnAFN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oKlnAFNActionPerformed(evt);
            }
        });

        oKlnVolver.setText("Volver");
        oKlnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oKlnVolverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout opKlnPanelLayout = new javax.swing.GroupLayout(opKlnPanel);
        opKlnPanel.setLayout(opKlnPanelLayout);
        opKlnPanelLayout.setHorizontalGroup(
            opKlnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(opKlnPanelLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(opKlnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(opKlnPanelLayout.createSequentialGroup()
                        .addComponent(oKlnVolver)
                        .addGap(18, 18, 18)
                        .addComponent(oKlnAFN))
                    .addGroup(opKlnPanelLayout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(oKlnSelec, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(519, Short.MAX_VALUE))
        );
        opKlnPanelLayout.setVerticalGroup(
            opKlnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(opKlnPanelLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(opKlnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(oKlnSelec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 343, Short.MAX_VALUE)
                .addGroup(opKlnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(oKlnVolver)
                    .addComponent(oKlnAFN))
                .addGap(26, 26, 26))
        );

        masterPanel.add(opKlnPanel, "opkln");

        jLabel11.setText("Aplicar opcional (?) a");

        oOpcAFN.setText("Realizar opcional");
        oOpcAFN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oOpcAFNActionPerformed(evt);
            }
        });

        oOpcVolver.setText("Volver");
        oOpcVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oOpcVolverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout opOpcPanelLayout = new javax.swing.GroupLayout(opOpcPanel);
        opOpcPanel.setLayout(opOpcPanelLayout);
        opOpcPanelLayout.setHorizontalGroup(
            opOpcPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(opOpcPanelLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(opOpcPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(opOpcPanelLayout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addComponent(oOpcSelec, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(515, Short.MAX_VALUE))
                    .addGroup(opOpcPanelLayout.createSequentialGroup()
                        .addComponent(oOpcVolver)
                        .addGap(18, 18, 18)
                        .addComponent(oOpcAFN)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        opOpcPanelLayout.setVerticalGroup(
            opOpcPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(opOpcPanelLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(opOpcPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(oOpcSelec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 343, Short.MAX_VALUE)
                .addGroup(opOpcPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(oOpcVolver)
                    .addComponent(oOpcAFN))
                .addGap(26, 26, 26))
        );

        masterPanel.add(opOpcPanel, "opopc");

        unionLXVolver.setText("Volver");
        unionLXVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unionLXVolverActionPerformed(evt);
            }
        });

        jLabel12.setText("Seleccione los AFN a unir y asigne los tokens");

        unionLXMain.setBackground(new java.awt.Color(102, 102, 102));
        unionLXMain.setLayout(new java.awt.BorderLayout());

        jLabel13.setText("Id del AFN resultante");

        unionLXUnir.setText("Unir AFNs");
        unionLXUnir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unionLXUnirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout unionLXPanelLayout = new javax.swing.GroupLayout(unionLXPanel);
        unionLXPanel.setLayout(unionLXPanelLayout);
        unionLXPanelLayout.setHorizontalGroup(
            unionLXPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(unionLXPanelLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(unionLXPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addGroup(unionLXPanelLayout.createSequentialGroup()
                        .addComponent(unionLXVolver)
                        .addGap(18, 18, 18)
                        .addComponent(unionLXUnir))
                    .addGroup(unionLXPanelLayout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(18, 18, 18)
                        .addComponent(unionLXId, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(unionLXMain, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(351, Short.MAX_VALUE))
        );
        unionLXPanelLayout.setVerticalGroup(
            unionLXPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, unionLXPanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel12)
                .addGap(18, 18, 18)
                .addComponent(unionLXMain, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(unionLXPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(unionLXId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 165, Short.MAX_VALUE)
                .addGroup(unionLXPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(unionLXVolver)
                    .addComponent(unionLXUnir))
                .addGap(26, 26, 26))
        );

        masterPanel.add(unionLXPanel, "unionlx");

        AFN_DVolver.setText("Volver");
        AFN_DVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AFN_DVolverActionPerformed(evt);
            }
        });

        jLabel15.setText("AFN a convertir a AFD");

        AFN_DSave.setText("Convertir");
        AFN_DSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AFN_DSaveActionPerformed(evt);
            }
        });

        jLabel16.setText("ID del AFD");

        AFN_DMain.setBackground(new java.awt.Color(102, 102, 102));
        AFN_DMain.setLayout(new java.awt.BorderLayout());

        jLabel14.setText("AFD");

        javax.swing.GroupLayout AFN_DPanelLayout = new javax.swing.GroupLayout(AFN_DPanel);
        AFN_DPanel.setLayout(AFN_DPanelLayout);
        AFN_DPanelLayout.setHorizontalGroup(
            AFN_DPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AFN_DPanelLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(AFN_DPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AFN_DPanelLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(AFN_DPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addComponent(jLabel15))
                        .addGap(30, 30, 30)
                        .addGroup(AFN_DPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AFN_DcBox, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AFN_DId, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel14)
                    .addGroup(AFN_DPanelLayout.createSequentialGroup()
                        .addComponent(AFN_DVolver)
                        .addGap(18, 18, 18)
                        .addComponent(AFN_DSave))
                    .addComponent(AFN_DMain, javax.swing.GroupLayout.DEFAULT_SIZE, 807, Short.MAX_VALUE))
                .addGap(31, 31, 31))
        );
        AFN_DPanelLayout.setVerticalGroup(
            AFN_DPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AFN_DPanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(AFN_DPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(AFN_DcBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(AFN_DPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(AFN_DId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AFN_DMain, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(AFN_DPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AFN_DVolver)
                    .addComponent(AFN_DSave))
                .addGap(26, 26, 26))
        );

        masterPanel.add(AFN_DPanel, "afnd");

        anaLXVolver.setText("Volver");
        anaLXVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anaLXVolverActionPerformed(evt);
            }
        });

        jLabel17.setText("Seleccione al AFD que desea usar");

        jLabel18.setText("Cadena que desea analizar");

        jScrollPane1.setViewportView(anaLXtext);

        anaLXMain.setBackground(new java.awt.Color(102, 102, 102));
        anaLXMain.setLayout(new java.awt.BorderLayout());

        anaLXanaliz.setText("Analizar");
        anaLXanaliz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anaLXanalizActionPerformed(evt);
            }
        });

        loadAFDPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel19.setText("Cargar AFD");

        jLabel20.setText("ID del AFD");

        loadAFDfile.setText("Seleccionar archivo");
        loadAFDfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadAFDfileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout loadAFDPanelLayout = new javax.swing.GroupLayout(loadAFDPanel);
        loadAFDPanel.setLayout(loadAFDPanelLayout);
        loadAFDPanelLayout.setHorizontalGroup(
            loadAFDPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loadAFDPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(loadAFDPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(loadAFDPanelLayout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(loadAFDPanelLayout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(loadAFDId))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loadAFDPanelLayout.createSequentialGroup()
                        .addGap(0, 66, Short.MAX_VALUE)
                        .addComponent(loadAFDfile)))
                .addContainerGap())
        );
        loadAFDPanelLayout.setVerticalGroup(
            loadAFDPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loadAFDPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel19)
                .addGap(18, 18, 18)
                .addGroup(loadAFDPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(loadAFDId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(loadAFDfile)
                .addContainerGap())
        );

        AFDSave.setText("Guardar AFD");
        AFDSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AFDSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout anaLXPanelLayout = new javax.swing.GroupLayout(anaLXPanel);
        anaLXPanel.setLayout(anaLXPanelLayout);
        anaLXPanelLayout.setHorizontalGroup(
            anaLXPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(anaLXPanelLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(anaLXPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(anaLXPanelLayout.createSequentialGroup()
                        .addGroup(anaLXPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(anaLXPanelLayout.createSequentialGroup()
                                .addGroup(anaLXPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel17)
                                    .addComponent(jLabel18))
                                .addGap(23, 23, 23))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, anaLXPanelLayout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(anaLXanaliz)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(anaLXPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(anaLXPanelLayout.createSequentialGroup()
                                .addComponent(anaLXcBox, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(AFDSave)
                                .addGap(0, 139, Short.MAX_VALUE))
                            .addComponent(anaLXMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addComponent(loadAFDPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))
                    .addGroup(anaLXPanelLayout.createSequentialGroup()
                        .addComponent(anaLXVolver)
                        .addContainerGap())))
        );
        anaLXPanelLayout.setVerticalGroup(
            anaLXPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, anaLXPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(anaLXPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(anaLXcBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AFDSave))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(anaLXPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(loadAFDPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(anaLXPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(anaLXMain, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(anaLXanaliz))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addComponent(anaLXVolver)
                .addGap(26, 26, 26))
        );

        masterPanel.add(anaLXPanel, "analx");

        jMenu1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jMenu1.setText("AFN");
        jMenu1.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N

        jMenuItem1.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jMenuItem1.setText("AFN Basico");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jMenuItem2.setText("Unir");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jMenuItem3.setText("Concatenar");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem4.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jMenuItem4.setText("Cerradura +");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuItem5.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jMenuItem5.setText("Cerradura *");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);

        jMenuItem6.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jMenuItem6.setText("Opcional");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem6);

        jMenuItem8.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jMenuItem8.setText("Union para analizador lexico");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem8);

        jMenuItem9.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jMenuItem9.setText("Convertir AFN a AFD");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem9);

        jMenuItem10.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jMenuItem10.setText("Analizar una cadena");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem10);

        jMenuItem7.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jMenuItem7.setText("Salir");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem7);

        masterMenuBar.add(jMenu1);

        setJMenuBar(masterMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(masterPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(masterPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        this.bCarInf.setText("");
        this.bCarSup.setText("");
        this.bIdAFN.setText("");
        this.manager.show(this.masterPanel, "basico");
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        if(this.AFNs.size()<2){
            JOptionPane.showMessageDialog(null,
                    "No se han creado suficientes AFNs para unir");
        }else{
            this.uAFN1.removeAllItems();
            this.uAFN2.removeAllItems();
            for (AFN iAFN : AFNs) {
                this.uAFN1.addItem(String.valueOf(iAFN.IdAFN));
                this.uAFN2.addItem(String.valueOf(iAFN.IdAFN));
            }
            this.manager.show(this.masterPanel, "unir");
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void uVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uVolverActionPerformed
        this.volver();
    }//GEN-LAST:event_uVolverActionPerformed

    private void uUnirAFNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uUnirAFNActionPerformed
        if(this.uAFN1.getSelectedIndex() == this.uAFN2.getSelectedIndex()){
            JOptionPane.showMessageDialog(null,
                    "No seleccione el mismo AFN");
        }else{
            AFN tempI = this.AFNs.get(this.uAFN1.getSelectedIndex());
            AFN tempF = this.AFNs.get(this.uAFN2.getSelectedIndex());
            tempI = tempI.UnirAFN(tempF);
            this.AFNs.set(this.uAFN1.getSelectedIndex(), tempI);
            this.AFNs.remove(this.uAFN2.getSelectedIndex());
            JOptionPane.showMessageDialog(null,
                    "Se han unido los AFNs exitosamente!");
            this.manager.show(this.masterPanel, "main");
        }
    }//GEN-LAST:event_uUnirAFNActionPerformed

    private void bCrearAFNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCrearAFNActionPerformed
        String carI = this.bCarInf.getText();
        String carS = this.bCarSup.getText();
        String idafn = this.bIdAFN.getText();
        if(carI.charAt(0) > 255){
            JOptionPane.showMessageDialog(null,
                    "No se acepta el caracter para 'Caracter Inf'"+
                    "Revise su caracter e intentelo nuevamente");
        }else if(carS.charAt(0) > 255){
            JOptionPane.showMessageDialog(null,
                    "No se acepta el caracter para 'Caracter Sup'"+
                    "Revise su caracter e intentelo nuevamente");
        }else if(!idafn.matches("[0-9]+")){
            JOptionPane.showMessageDialog(null,
                    "No se acepta el caracter para 'ID del AFN'"+
                    "Revise su caracter e intentelo nuevamente");
        }else{
            AFN temp = new AFN().crearAFNBasico(carI.charAt(0), carS.charAt(0));
            temp.IdAFN = Integer.parseInt(idafn);
            this.AFNs.add(temp);
            JOptionPane.showMessageDialog(null,
                    "Se guardo el AFN "+idafn+" exitosamente!");
            this.manager.show(this.masterPanel, "main");
        }
    }//GEN-LAST:event_bCrearAFNActionPerformed

    private void bVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bVolverActionPerformed
        this.volver();
    }//GEN-LAST:event_bVolverActionPerformed

    private void cConcAFNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cConcAFNActionPerformed
        if(this.cAFN1.getSelectedIndex() == this.cAFN2.getSelectedIndex()){
            JOptionPane.showMessageDialog(null,
                    "No seleccione el mismo AFN");
        }else{
            AFN tempI = this.AFNs.get(this.cAFN1.getSelectedIndex());
            AFN tempF = this.AFNs.get(this.cAFN2.getSelectedIndex());
            tempI = tempI.ConcatAFN(tempF);
            this.AFNs.set(this.cAFN1.getSelectedIndex(), tempI);
            this.AFNs.remove(this.cAFN2.getSelectedIndex());
            JOptionPane.showMessageDialog(null,
                    "Se han concatenado los AFNs exitosamente!");
            this.manager.show(this.masterPanel, "main");
        }
    }//GEN-LAST:event_cConcAFNActionPerformed

    private void cVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cVolverActionPerformed
        this.volver();
    }//GEN-LAST:event_cVolverActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        if(this.AFNs.size()<2){
            JOptionPane.showMessageDialog(null,
                    "No se han creado suficientes AFNs para concatenar");
        }else{
            this.cAFN1.removeAllItems();
            this.cAFN2.removeAllItems();
            for (AFN iAFN : AFNs) {
                this.cAFN1.addItem(String.valueOf(iAFN.IdAFN));
                this.cAFN2.addItem(String.valueOf(iAFN.IdAFN));
            }
            this.manager.show(this.masterPanel, "conc");
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void oPosAFNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oPosAFNActionPerformed
        AFN temp = this.AFNs.get(this.oPosSelec.getSelectedIndex());
        temp = temp.CerraduraPos();
        this.AFNs.set(this.oPosSelec.getSelectedIndex(), temp);
        JOptionPane.showMessageDialog(null,
                "Se ha aplicado la cerradura positiva exitosamente!");
        this.manager.show(this.masterPanel, "main");
    }//GEN-LAST:event_oPosAFNActionPerformed

    private void oPosVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oPosVolverActionPerformed
        this.volver();
    }//GEN-LAST:event_oPosVolverActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        if(this.AFNs.size()<1){
            JOptionPane.showMessageDialog(null,
                    "No se han creado suficientes AFNs para operar");
        }else{
            this.oPosSelec.removeAllItems();
            for (AFN iAFN : AFNs) {
                this.oPosSelec.addItem(String.valueOf(iAFN.IdAFN));
            }
            this.manager.show(this.masterPanel, "oppos");
        }
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void oKlnAFNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oKlnAFNActionPerformed
        AFN temp = this.AFNs.get(this.oKlnSelec.getSelectedIndex());
        temp = temp.CerraduraKleen();
        this.AFNs.set(this.oKlnSelec.getSelectedIndex(), temp);
        JOptionPane.showMessageDialog(null,
                "Se ha aplicado la cerradura * exitosamente!");
        this.manager.show(this.masterPanel, "main");
    }//GEN-LAST:event_oKlnAFNActionPerformed

    private void oKlnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oKlnVolverActionPerformed
        this.volver();
    }//GEN-LAST:event_oKlnVolverActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        if(this.AFNs.size()<1){
            JOptionPane.showMessageDialog(null,
                    "No se han creado suficientes AFNs para operar");
        }else{
            this.oKlnSelec.removeAllItems();
            for (AFN iAFN : AFNs) {
                this.oKlnSelec.addItem(String.valueOf(iAFN.IdAFN));
            }
            this.manager.show(this.masterPanel, "opkln");
        }
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void oOpcAFNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oOpcAFNActionPerformed
        AFN temp = this.AFNs.get(this.oOpcSelec.getSelectedIndex());
        temp = temp.Opcional();
        this.AFNs.set(this.oOpcSelec.getSelectedIndex(), temp);
        JOptionPane.showMessageDialog(null,
                "Se ha aplicado la cerradura opcional exitosamente!");
        this.manager.show(this.masterPanel, "main");
    }//GEN-LAST:event_oOpcAFNActionPerformed

    private void oOpcVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oOpcVolverActionPerformed
        this.volver();
    }//GEN-LAST:event_oOpcVolverActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        if (this.AFNs.size() < 1) {
            JOptionPane.showMessageDialog(null,
                    "No se han creado suficientes AFNs para operar");
        } else {
            this.oOpcSelec.removeAllItems();
            for (AFN iAFN : AFNs) {
                this.oOpcSelec.addItem(String.valueOf(iAFN.IdAFN));
            }
            this.manager.show(this.masterPanel, "opopc");
        }
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        if(this.AFNs.size()<1){
            JOptionPane.showMessageDialog(null,
                    "No se han creado suficientes AFNs para unir");
        }else{
            String[] columnas = {"AFNs",
                        "Seleccionar AFN",
                        "Token",};
            Object[][] data = new Object[this.AFNs.size()][3];
            for (int i = 0; i < AFNs.size(); i++) {
                data[i][0] = String.valueOf(AFNs.get(i).IdAFN);
                data[i][1] = false;
                data[i][2] = "";
            }
            this.unionLXTabla = new javax.swing.JTable(new modeloTablaUnionLX(columnas, data));
            javax.swing.JScrollPane unionLXScroll = new javax.swing.JScrollPane(unionLXTabla,javax.swing.JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED,javax.swing.JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
            this.unionLXTabla.setFillsViewportHeight(true);
            this.unionLXMain.removeAll();
            this.unionLXMain.add(unionLXScroll);
            this.manager.show(this.masterPanel, "unionlx");
            this.revalidate();
            this.repaint();
        }
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void AFN_DVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AFN_DVolverActionPerformed
        this.volver();
    }//GEN-LAST:event_AFN_DVolverActionPerformed

    private void AFN_DSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AFN_DSaveActionPerformed
        AFN tempAFN = null;
        AFD tempAFD = null;
        if(this.AFN_DId.getText().matches("[0-9]+")){
            for (int i = 0; i < AFNs.size(); i++) {
                if(this.AFNs.get(i).IdAFN == Integer.valueOf((String)this.AFN_DcBox.getSelectedItem())){
                    tempAFN = this.AFNs.get(i);
                    break;
                }
            }
            tempAFD = tempAFN.ConvertirAFN();
            tempAFD.id = Integer.valueOf(this.AFN_DId.getText());
            this.AFDs.add(tempAFD);
            String[] Columnas = new String[258];
            Columnas[0] = "ID";
            for (int i = 1; i < Columnas.length-1; i++) {
                Columnas[i] = (Character.toString((char) i));
            }
            Columnas[257] = "Token";
            String[][] data = new String[tempAFD.tabla.size()][Columnas.length];
            for (int i = 0; i < tempAFD.tabla.size(); i++) {
                data[i][0] = String.valueOf(i);
                for (int j = 1; j < tempAFD.tabla.get(0).length+1; j++) {
                    data[i][j] = String.valueOf(tempAFD.tabla.get(i)[j-1]);
                }
            }
            this.AFN_DTabla = new javax.swing.JTable(data, Columnas){
                public boolean getScrollableTracksViewportWidth() {
                    return getPreferredSize().width < getParent().getWidth();
                }
            };
            AFN_DTabla.setAutoResizeMode( javax.swing.JTable.AUTO_RESIZE_OFF );
            AFN_DTabla.getColumnModel().getColumn(0).setWidth(50);
            for (int i = 1; i < Columnas.length-1; i++) {
                AFN_DTabla.getColumnModel().getColumn(i).setWidth(20);
            }
            AFN_DTabla.getColumnModel().getColumn(Columnas.length-1).setWidth(50);
            javax.swing.JScrollPane AFN_DScroll = new javax.swing.JScrollPane(AFN_DTabla,javax.swing.JScrollPane.VERTICAL_SCROLLBAR_ALWAYS,javax.swing.JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
            this.AFN_DMain.removeAll();
            this.AFN_DMain.add(AFN_DScroll,BorderLayout.CENTER);
            this.revalidate();
            this.repaint();
        }else{
            JOptionPane.showMessageDialog(null,
                    "No se acepta el caracter para 'ID del AFN'"
                    + "Revise su caracter e intentelo nuevamente");
        }
    }//GEN-LAST:event_AFN_DSaveActionPerformed

    private void unionLXVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unionLXVolverActionPerformed
        this.volver();
    }//GEN-LAST:event_unionLXVolverActionPerformed

    private void unionLXUnirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unionLXUnirActionPerformed
        ArrayList<Integer> tokens = new ArrayList<>();
        ArrayList<AFN> AFNsAUnir = new ArrayList<>();
        String temp;
        boolean valid = true;
        
        for (int i = 0; i < AFNs.size(); i++) {
            if((boolean)this.unionLXTabla.getValueAt(i, 1)){
                temp = (String) this.unionLXTabla.getValueAt(i, 2);
                if (temp.matches("[0-9]+")) {
                    tokens.add(Integer.valueOf(temp));
                    AFNsAUnir.add(this.AFNs.get(i));
                } else {
                    valid = false;
                    JOptionPane.showMessageDialog(null,
                            "No se acepta el token para el AFN "
                            + (String) this.unionLXTabla.getValueAt(i, 0)
                            + " Revise sus tokens e intentelo nuevamente");
                    break;
                }
            }
        }
        if(!(temp = this.unionLXId.getText()).matches("[0-9]+")){
            JOptionPane.showMessageDialog(null,
                    "No se acepta el id para el AFN resultante"
                    + " Revise su id e intentelo nuevamente");
            valid = false;
        }
        if(valid){
            AFN unionLexico = new AFN();
            unionLexico.IdAFN = Integer.valueOf(temp);
            //hacer union lexico
            unionLexico.UnionEspecialAFNs(null, 0);
            //añadir afn tokens
            for (int i = 0; i < AFNsAUnir.size(); i++) {
                unionLexico.UnionEspecialAFNs(AFNsAUnir.get(i), tokens.get(i));
                this.AFNs.remove(AFNsAUnir.get(i));
            }
            this.AFNs.add(unionLexico);
            JOptionPane.showMessageDialog(null,
                    "Se han unido los AFN exitosamente!");
            this.manager.show(this.masterPanel, "main");
        }
    }//GEN-LAST:event_unionLXUnirActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        boolean exist = false;
        this.AFN_DcBox.removeAllItems();
        for (AFN iAFN : AFNs) {
            if(iAFN.seAgregoAFNUnionLexico){
                this.AFN_DcBox.addItem(String.valueOf(iAFN.IdAFN));
                exist = true;
            }
        }
        if(!exist){
            JOptionPane.showMessageDialog(null,
                    "No hay AFNs listos para convertir");
        }else{
            this.manager.show(this.masterPanel, "afnd");
        }
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void anaLXVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anaLXVolverActionPerformed
        this.volver();
    }//GEN-LAST:event_anaLXVolverActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        this.anaLXcBox.removeAllItems();
        for (AFD AFD1 : AFDs) {
            this.anaLXcBox.addItem(String.valueOf(AFD1.id));
        }
        this.manager.show(this.masterPanel, "analx");
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void anaLXanalizActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anaLXanalizActionPerformed
        AFD temp = this.AFDs.get(this.anaLXcBox.getSelectedIndex());
        this.actAnaLX = new AnalizadorLexico(this.anaLXtext.getText(),temp);
        int tempToken,index = 0;
        String[] Columnas = {"Token","Lexema"};
        ArrayList<String[]> dataDyn = new ArrayList<>();
                
        while((tempToken = actAnaLX.yylex()) != SimbolosEspeciales.FIN){
            if(tempToken == SimbolosEspeciales.ERROR){
                JOptionPane.showMessageDialog(null,
                    "Su cadena sigma no es aceptada por el AFD");
                break;
            }
            dataDyn.add(new String[2]);
            dataDyn.get(index)[0] = String.valueOf(tempToken);
            dataDyn.get(index)[1] = actAnaLX.lexema;
            index++;
        }
        
        String data[][] = new String[dataDyn.size()][2];
        for (int j = 0; j < dataDyn.size(); j++) {
            data[j][0] = dataDyn.get(j)[0];
            data[j][1] = dataDyn.get(j)[1];
            
        }
        
        //Cosas de tablas
        this.anaLXTabla = new javax.swing.JTable(data, Columnas) {
            public boolean getScrollableTracksViewportWidth() {
                return getPreferredSize().width < getParent().getWidth();
            }
        };
        anaLXTabla.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        anaLXTabla.getColumnModel().getColumn(0).setWidth(50);
        for (int i = 1; i < Columnas.length - 1; i++) {
            anaLXTabla.getColumnModel().getColumn(i).setWidth(20);
        }
        anaLXTabla.getColumnModel().getColumn(Columnas.length - 1).setWidth(50);
        javax.swing.JScrollPane anaLXScroll = new javax.swing.JScrollPane(anaLXTabla, javax.swing.JScrollPane.VERTICAL_SCROLLBAR_ALWAYS, javax.swing.JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
        this.anaLXMain.removeAll();
        this.anaLXMain.add(anaLXScroll, BorderLayout.CENTER);
        this.revalidate();
        this.repaint();
    }//GEN-LAST:event_anaLXanalizActionPerformed

    private void loadAFDfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadAFDfileActionPerformed
        javax.swing.JFileChooser ch = new javax.swing.JFileChooser();
        ch.setFileSelectionMode(javax.swing.JFileChooser.FILES_ONLY);
        ch.setCurrentDirectory(new java.io.File("."));
        ch.showOpenDialog(this);
        if(ch.getSelectedFile() != null){
            File file = ch.getSelectedFile();
            String fileName = file.getName();
            char idChar = fileName.charAt(4);
            java.io.ObjectInputStream in;
            try {
                in = new java.io.ObjectInputStream(new java.io.FileInputStream(file));
                AFD temp = (AFD)in.readObject();
                //temp.id = Integer.valueOf(this.loadAFDId.getText());
                String inputText = this.loadAFDId.getText();
                if (inputText.isEmpty()) {
                    temp.id = Character.getNumericValue(idChar);
                }
                else{
                    temp.id = Integer.valueOf(this.loadAFDId.getText());
                }
                this.AFDs.add(temp);
                this.anaLXcBox.removeAllItems();
                for (AFD AFD1 : AFDs) {
                    this.anaLXcBox.addItem(String.valueOf(AFD1.id));
                }
            } catch (Exception ex) {
                System.out.println(ex);
                JOptionPane.showMessageDialog(null,
                    "No se pudo leer su archivo");
            }
        }else{
            JOptionPane.showMessageDialog(null,
                    "No se pudo leer su archivo");
        }
    }//GEN-LAST:event_loadAFDfileActionPerformed

    private void AFDSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AFDSaveActionPerformed
        AFD temp = this.AFDs.get(this.anaLXcBox.getSelectedIndex());
        String fileName = "AFD_" + temp.id + ".txt";
        try {
            java.io.FileOutputStream fout = new java.io.FileOutputStream(fileName);
            java.io.ObjectOutputStream out = new java.io.ObjectOutputStream(fout);
            out.writeObject(temp);
            out.flush();
            out.close();
            JOptionPane.showMessageDialog(null,
                    "se ha guardado su AFD como: " + fileName);
        } catch (Exception ex) {
            System.out.println(ex);
            JOptionPane.showMessageDialog(null,
                    "No se pudo guardar su archivo"
                    + " Intentelo nuevamente");
        }
    }//GEN-LAST:event_AFDSaveActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        dispose();                // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AFDSave;
    private javax.swing.JTextField AFN_DId;
    private javax.swing.JPanel AFN_DMain;
    private javax.swing.JPanel AFN_DPanel;
    private javax.swing.JButton AFN_DSave;
    private javax.swing.JToggleButton AFN_DVolver;
    private javax.swing.JComboBox<String> AFN_DcBox;
    private javax.swing.JPanel anaLXMain;
    private javax.swing.JPanel anaLXPanel;
    private javax.swing.JToggleButton anaLXVolver;
    private javax.swing.JToggleButton anaLXanaliz;
    private javax.swing.JComboBox<String> anaLXcBox;
    private javax.swing.JTextPane anaLXtext;
    private javax.swing.JTextField bCarInf;
    private javax.swing.JTextField bCarSup;
    private javax.swing.JButton bCrearAFN;
    private javax.swing.JTextField bIdAFN;
    private javax.swing.JToggleButton bVolver;
    private javax.swing.JPanel basicoPanel;
    private javax.swing.JComboBox<String> cAFN1;
    private javax.swing.JComboBox<String> cAFN2;
    private javax.swing.JToggleButton cConcAFN;
    private javax.swing.JToggleButton cVolver;
    private javax.swing.JPanel concPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField loadAFDId;
    private javax.swing.JPanel loadAFDPanel;
    private javax.swing.JButton loadAFDfile;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar masterMenuBar;
    private javax.swing.JPanel masterPanel;
    private javax.swing.JToggleButton oKlnAFN;
    private javax.swing.JComboBox<String> oKlnSelec;
    private javax.swing.JToggleButton oKlnVolver;
    private javax.swing.JToggleButton oOpcAFN;
    private javax.swing.JComboBox<String> oOpcSelec;
    private javax.swing.JToggleButton oOpcVolver;
    private javax.swing.JToggleButton oPosAFN;
    private javax.swing.JComboBox<String> oPosSelec;
    private javax.swing.JToggleButton oPosVolver;
    private javax.swing.JPanel opKlnPanel;
    private javax.swing.JPanel opOpcPanel;
    private javax.swing.JPanel opPosPanel;
    private javax.swing.JComboBox<String> uAFN1;
    private javax.swing.JComboBox<String> uAFN2;
    private javax.swing.JToggleButton uUnirAFN;
    private javax.swing.JToggleButton uVolver;
    private javax.swing.JTextField unionLXId;
    private javax.swing.JPanel unionLXMain;
    private javax.swing.JPanel unionLXPanel;
    private javax.swing.JButton unionLXUnir;
    private javax.swing.JToggleButton unionLXVolver;
    private javax.swing.JPanel unirPanel;
    // End of variables declaration//GEN-END:variables
}
